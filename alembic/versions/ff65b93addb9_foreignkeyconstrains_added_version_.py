"""ForeignKeyConstrains added. Version field added.

Revision ID: ff65b93addb9
Revises: 42b720e765f9
Create Date: 2021-04-22 16:17:29.131647

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ff65b93addb9'
down_revision = '42b720e765f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('state', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.create_unique_constraint(None, 'state', ['self_id', 'version'])
    op.add_column('state_alias', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('state_alias_state_id_fkey', 'state_alias', type_='foreignkey')
    op.create_foreign_key(None, 'state_alias', 'state', ['state_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.add_column('state_xref_service', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('state_xref_service_service_id_fkey', 'state_xref_service', type_='foreignkey')
    op.drop_constraint('state_xref_service_state_id_fkey', 'state_xref_service', type_='foreignkey')
    op.create_foreign_key(None, 'state_xref_service', 'state', ['state_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'state_xref_service', 'service', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('city', sa.Column('state_version', sa.TIMESTAMP(), nullable=False))
    op.add_column('city', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.create_unique_constraint(None, 'city', ['self_id', 'version'])
    op.drop_constraint('city_state_id_fkey', 'city', type_='foreignkey')
    op.create_foreign_key(None, 'city', 'state', ['state_id', 'state_version'], ['self_id', 'version'], ondelete='CASCADE')
    op.add_column('city_alias', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('city_alias_city_id_fkey', 'city_alias', type_='foreignkey')
    op.create_foreign_key(None, 'city_alias', 'city', ['city_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.add_column('city_xref_service', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('city_xref_service_city_id_fkey', 'city_xref_service', type_='foreignkey')
    op.drop_constraint('city_xref_service_service_id_fkey', 'city_xref_service', type_='foreignkey')
    op.create_foreign_key(None, 'city_xref_service', 'service', ['service_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'city_xref_service', 'city', ['city_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.add_column('operation_type', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.create_unique_constraint(None, 'operation_type', ['self_id', 'version'])
    op.add_column('operation_type_alias', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('operation_type_alias_operation_type_id_fkey', 'operation_type_alias', type_='foreignkey')
    op.create_foreign_key(None, 'operation_type_alias', 'operation_type', ['operation_type_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.add_column('operation_type_xref_service', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('operation_type_xref_service_operation_type_id_fkey', 'operation_type_xref_service', type_='foreignkey')
    op.drop_constraint('operation_type_xref_service_service_id_fkey', 'operation_type_xref_service', type_='foreignkey')
    op.create_foreign_key(None, 'operation_type_xref_service', 'operation_type', ['operation_type_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'operation_type_xref_service', 'service', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('realty_type', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.create_unique_constraint(None, 'realty_type', ['self_id', 'version'])
    op.add_column('realty_type_alias', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('realty_type_alias_realty_type_id_fkey', 'realty_type_alias', type_='foreignkey')
    op.create_foreign_key(None, 'realty_type_alias', 'realty_type', ['realty_type_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.add_column('realty_type_xref_service', sa.Column('version', sa.TIMESTAMP(), nullable=False))
    op.drop_constraint('realty_type_xref_service_service_id_fkey', 'realty_type_xref_service', type_='foreignkey')
    op.drop_constraint('realty_type_xref_service_realty_type_id_fkey', 'realty_type_xref_service', type_='foreignkey')
    op.create_foreign_key(None, 'realty_type_xref_service', 'realty_type', ['realty_type_id', 'version'], ['self_id', 'version'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'realty_type_xref_service', 'service', ['service_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'state_xref_service', type_='foreignkey')
    op.drop_constraint(None, 'state_xref_service', type_='foreignkey')
    op.create_foreign_key('state_xref_service_state_id_fkey', 'state_xref_service', 'state', ['state_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('state_xref_service_service_id_fkey', 'state_xref_service', 'service', ['service_id'], ['id'], ondelete='SET NULL')
    op.drop_column('state_xref_service', 'version')
    op.drop_constraint(None, 'state_alias', type_='foreignkey')
    op.create_foreign_key('state_alias_state_id_fkey', 'state_alias', 'state', ['state_id'], ['id'], ondelete='SET NULL')
    op.drop_column('state_alias', 'version')
    op.drop_constraint(None, 'state', type_='unique')
    op.drop_column('state', 'version')
    op.drop_constraint(None, 'realty_type_xref_service', type_='foreignkey')
    op.drop_constraint(None, 'realty_type_xref_service', type_='foreignkey')
    op.create_foreign_key('realty_type_xref_service_realty_type_id_fkey', 'realty_type_xref_service', 'realty_type', ['realty_type_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('realty_type_xref_service_service_id_fkey', 'realty_type_xref_service', 'service', ['service_id'], ['id'], ondelete='SET NULL')
    op.drop_column('realty_type_xref_service', 'version')
    op.drop_constraint(None, 'realty_type_alias', type_='foreignkey')
    op.create_foreign_key('realty_type_alias_realty_type_id_fkey', 'realty_type_alias', 'realty_type', ['realty_type_id'], ['id'], ondelete='SET NULL')
    op.drop_column('realty_type_alias', 'version')
    op.drop_constraint(None, 'realty_type', type_='unique')
    op.drop_column('realty_type', 'version')
    op.drop_constraint(None, 'operation_type_xref_service', type_='foreignkey')
    op.drop_constraint(None, 'operation_type_xref_service', type_='foreignkey')
    op.create_foreign_key('operation_type_xref_service_service_id_fkey', 'operation_type_xref_service', 'service', ['service_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('operation_type_xref_service_operation_type_id_fkey', 'operation_type_xref_service', 'operation_type', ['operation_type_id'], ['id'], ondelete='SET NULL')
    op.drop_column('operation_type_xref_service', 'version')
    op.drop_constraint(None, 'operation_type_alias', type_='foreignkey')
    op.create_foreign_key('operation_type_alias_operation_type_id_fkey', 'operation_type_alias', 'operation_type', ['operation_type_id'], ['id'], ondelete='SET NULL')
    op.drop_column('operation_type_alias', 'version')
    op.drop_constraint(None, 'operation_type', type_='unique')
    op.drop_column('operation_type', 'version')
    op.drop_constraint(None, 'city_xref_service', type_='foreignkey')
    op.drop_constraint(None, 'city_xref_service', type_='foreignkey')
    op.create_foreign_key('city_xref_service_service_id_fkey', 'city_xref_service', 'service', ['service_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('city_xref_service_city_id_fkey', 'city_xref_service', 'city', ['city_id'], ['id'], ondelete='SET NULL')
    op.drop_column('city_xref_service', 'version')
    op.drop_constraint(None, 'city_alias', type_='foreignkey')
    op.create_foreign_key('city_alias_city_id_fkey', 'city_alias', 'city', ['city_id'], ['id'], ondelete='SET NULL')
    op.drop_column('city_alias', 'version')
    op.drop_constraint(None, 'city', type_='foreignkey')
    op.create_foreign_key('city_state_id_fkey', 'city', 'state', ['state_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'city', type_='unique')
    op.drop_column('city', 'version')
    op.drop_column('city', 'state_version')
    # ### end Alembic commands ###
